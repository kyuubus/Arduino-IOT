#include <SPI.h>
#include <Ethernet.h>
#define pinPIR 9
#define pinPIR2 8
#define pinRELAY 7
#define pinRELAY2 6
#define pinRELAY3 5
#define pinRELAY4 4
int statusPIR = 0;
int statusPIR2 = 0;
const int pinRESET = 2;


byte mac[] = {0x1E, 0xE9, 0x09, 0xaE7, 0x56, 0xD7};
char server[] = "172.2.234.157"; //Server PTT

IPAddress ip(172, 3, 234, 4);
IPAddress myDns(172, 3, 234, 1);

EthernetServer server_sw(80);
EthernetClient client;
String page = "";
String relay1State = "Off";

// Client variables 
char linebuf[80];
int charcount=0;
int i;
int n;
int r;

void setup() { 
  pinMode(pinPIR2, INPUT); //Pin PIR 1
  pinMode(pinPIR, INPUT);   // Pin PIR 2
  pinMode(pinRELAY, OUTPUT); // Pin Relay 1 (untuk Buzzer)
  pinMode(pinRELAY2, OUTPUT); // Pin Relay 2 (untuk Lampu
  pinMode(pinRELAY3, OUTPUT); // Pin Relay 2 (untuk Lampu
  pinMode(pinRELAY4, OUTPUT); // Pin Relay 2 (untuk Lampu
  digitalWrite(pinRESET, HIGH);
  pinMode (pinRESET, OUTPUT);
  
  // Open serial communication at a baud rate of 9600
  Serial.begin(9600);
    while (!Serial) {
  }
  
  // start the Ethernet connection and the server:
  Ethernet.begin(mac, ip, myDns);
  server_sw.begin();
  Serial.print("server is at ");
  Serial.println(Ethernet.localIP());

  delay(1000);
  Serial.print("connecting to ");
  Serial.print(server);
  Serial.println("...");
  client.connect(server, 3000); 
  Serial.print("connected to ");
  Serial.println(client.remoteIP());
}

// Display dashboard page with on/off button for relay
// It also print Temperature in C and F
void dashboardPage(EthernetClient &client) {
  client.println("<!DOCTYPE HTML><html><head>");
  client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></head><body>");                                                             
  client.println("<h3>Arduino Web Server - <a href=\"/\">Refresh</a></h3>");
  // Generates buttons to control the relay
  client.println("<h4>Relay 1 - State: " + relay1State + "</h4>");
  // If relay is off, it shows the button to turn the output on          
  if(relay1State == "Off"){
    client.println("<a href=\"/relay1on\"><button>ON</button></a>");
  }
  // If relay is on, it shows the button to turn the output off         
  else if(relay1State == "On"){
    client.println("<a href=\"/relay1off\"><button>OFF</button></a>");                                                                    
  }
  client.println("</body></html>"); 
  client.println("&nbsp;<a href=\"RESET\"><button>RESET</button></a>");
}


void loop() {
  // listen for incoming clients
  EthernetClient client = server_sw.available();
  r+=1;
  if (client) {
    Serial.println("new client");
    memset(linebuf,0,sizeof(linebuf));
    charcount=0;
    // an http request ends with a blank line
    boolean currentLineIsBlank = true;
    while (client.connected()) {
      if (client.available()) {
       char c = client.read();
       //read char by char HTTP request
        linebuf[charcount]=c;
        if (charcount<sizeof(linebuf)-1) charcount++;
        // if you've gotten to the end of the line (received a newline
        // character) and the line is blank, the http request has ended,
        // so you can send a reply
        if (c == '\n' && currentLineIsBlank) {
          dashboardPage(client);
          break;
        }
        if (c == '\n') {
          if (strstr(linebuf,"GET /relay1off") > 0){
            digitalWrite(pinRELAY3, HIGH);
            digitalWrite(pinRELAY4, HIGH);
             relay1State = "Off";
          }
          else if (strstr(linebuf,"GET /relay1on") > 0){
            digitalWrite(pinRELAY3, LOW);
            digitalWrite(pinRELAY4, LOW);
            relay1State = "On";
          }
          else if (strstr(linebuf,"GET /RESET") > 0){
            digitalWrite(pinRESET, LOW);
          }
          // you're starting a new line
          currentLineIsBlank = true;
          memset(linebuf,0,sizeof(linebuf));
          charcount=0;          
        } 
        else if (c != '\r') {
          // you've gotten a character on the current line
          currentLineIsBlank = false;
        }
      }
    }
  }
    statusPIR = digitalRead(pinPIR);
  statusPIR2 = digitalRead(pinPIR2);
  if(statusPIR ==HIGH) {
    i++;
    Serial.println("PIR 1 ADA GERAKAN DELAY 5 DETIK");
    delay(5000);
  }
   else {
    i=0;
    digitalWrite(pinRELAY, HIGH);
    digitalWrite(pinRELAY2, HIGH);
    Serial.println("PIR 1 TIDAK ADA GERAKAN");
    delay(1000);
}
    if(statusPIR2 ==HIGH) {
     n+=1;
    Serial.println("PIR 2 ADA GERAKAN DELAY 5 DETIK");
    delay(5000);
  }
 
  else {
    n=0;
    digitalWrite(pinRELAY, HIGH);
    digitalWrite(pinRELAY2, HIGH);
    Serial.println("PIR 2 TIDAK ADA GERAKAN");
    delay(1000);
}
if (i>=3){    
    client.connect(server, 3000); 
    client.println("GET /send_text/?phone=6281387479873@c.us&message=REP_SUMOHAI");
    client.println("Host: http://172.2.234.157");
    client.println();
    digitalWrite(pinRELAY, LOW);
    digitalWrite(pinRELAY2, LOW);
    Serial.println("PIR 1 ADA GERAKAN DELAY 10 DETIK");
    i=0;
    delay(10000);
}
if (n>=3){
    client.connect(server, 3000); 
    client.println("GET /send_text/?phone=6281387479873@c.us&message=REP_SUMOHAI");
    client.println("Host: http://172.2.234.157");
    client.println();
    digitalWrite(pinRELAY, LOW);
    digitalWrite(pinRELAY2, LOW);
    Serial.println("PIR 2 ADA GERAKAN DELAY 10 DETIK");
    n=0;
    delay(10000);
}
if (r==86400){
  digitalWrite(pinRESET, LOW);
  r=0;
}
}
